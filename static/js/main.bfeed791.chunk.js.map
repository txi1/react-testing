{"version":3,"sources":["logo.svg","Clock.js","Button.js","Table.js","Form.js","Alarm.js","App.js","AppHeader.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","Button","isOn","updateButton","bind","onClick","TableHeader","TableBody","rows","characterData","map","row","index","key","name","job","className","removeCharacter","Table","Form","handleChange","event","target","value","initialState","submitForm","handleSubmit","htmlFor","id","type","onChange","AlarmForm","isButtonDisabled","required","placeholder","disabled","AlarmDisplay","hours","minutes","seconds","Alarm","s","Number","rewindTime","soundUrl","timerId","console","log","App","characters","filter","character","i","src","logo","alt","AppHeader","isHeaderVisible","handleClick","scrollToTop","scroll","duration","smooth","href","to","spy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bfeed791.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick(){\r\n        this.setState({\r\n            date: new Date()\r\n        })\r\n    }\r\n    \r\n    render(){\r\n     return (\r\n        <div>\r\n            <h1>Hello, World!</h1>\r\n            <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Clock\r\n","import React, {Component} from 'react'\r\n\r\nclass Button extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {isOn: props.isOn}\r\n    \r\n        this.updateButton = this.updateButton.bind(this);\r\n    }\r\n\r\n\r\n    updateButton(){\r\n        this.setState(state => ({\r\n            isOn: !state.isOn \r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.updateButton}>\r\n                    {this.state.isOn ? 'On' : 'Off'}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Button","import React, {Component} from 'react'\r\n\r\n\r\nconst TableHeader = () =>{\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) =>{\r\n\r\n\r\n    const rows = props.characterData.map((row, index) =>{\r\n        return(\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <button className=\"table-button\" onClick= { () => props.removeCharacter(index)}>Delet this</button>\r\n            </tr>\r\n        )\r\n    })\r\n    return(\r\n        <tbody>{rows}</tbody>\r\n    )\r\n}\r\n\r\nconst Table = (props) =>{\r\n        const {characterData, removeCharacter} = props\r\n        return(\r\n            <table>\r\n                <TableHeader/>\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n    \r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    \r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n    \r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n\r\n        return(\r\n            <form className=\"job-form\">\r\n                <div className='form-row'>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange = {this.handleChange} \r\n                    />\r\n                </div>\r\n                <div className='form-row'>\r\n                    <label htmlFor=\"job\">Job</label>\r\n                    <input \r\n                        id=\"job\"\r\n                        name=\"job\"\r\n                        type=\"text\"\r\n                        value={job}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n                </div>\r\n            </form>\r\n        );\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Form;\r\n","import React, {Component} from 'react'\r\n\r\n\r\nconst AlarmForm = (props) =>{\r\n    const {handleChange, handleSubmit, isButtonDisabled} = props\r\n    return(\r\n        <form>\r\n            <div className=\"form-row\">\r\n                <label htmlFor=\"hours\">Hours</label>\r\n                <input \r\n                    id='hours'\r\n                    name='hours'\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"0\"\r\n                    />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <label htmlFor=\"minutes\">Minutes</label>\r\n                <input \r\n                    id='minutes'\r\n                    name='minutes'\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"0\"\r\n                    />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <label htmlFor=\"seconds\">Seconds</label>\r\n                <input \r\n                    id='seconds'\r\n                    name='seconds'\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"0\"\r\n                    />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <input type=\"button\" value=\"Submit\" onClick={handleSubmit} disabled={isButtonDisabled}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AlarmDisplay = (props) =>{\r\n    const hours = props.hours\r\n    const minutes = props.minutes\r\n    const seconds = props.seconds\r\n    return(\r\n        <div>\r\n            <p>{hours +\" Hours \" +minutes +\" Minutes \" +seconds +\" Seconds\"}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass Alarm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.rewindTime = this.rewindTime.bind(this);\r\n\r\n        this.state = {\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0,\r\n                isButtonDisabled: true,\r\n                soundUrl: \"\"\r\n        }\r\n    }\r\n    \r\n\r\n    handleChange = (event) =>{\r\n        const{name, value} = event.target\r\n        let s = true\r\n        this.setState({\r\n                [name]: Number(value)\r\n        }, () =>{\r\n            if(this.state.hours || this.state.minutes || this.state.seconds){\r\n                s = false\r\n            }\r\n            this.setState({\r\n                isButtonDisabled: s\r\n            })\r\n        })\r\n        \r\n    }\r\n    \r\n    handleSubmit(){  \r\n        \r\n            this.timerId = setInterval(()=>{\r\n              this.tick()\r\n            }, 1000);\r\n\r\n}\r\n\r\n    rewindTime(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    tick(){\r\n        console.log(this.state)\r\n        if(this.state.seconds === 0){\r\n            if(this.state.minutes === 0){\r\n                if(this.state.hours === 0){\r\n                    this.rewindTime();\r\n                }else{\r\n                    this.setState(\r\n                        {\r\n                            hours: this.state.hours-1,\r\n                            minutes: 59,\r\n                            seconds: 59\r\n                        }\r\n                    )\r\n                }\r\n\r\n            }else{\r\n                this.setState(\r\n                        {\r\n                            minutes: this.state.minutes-1,\r\n                            seconds: 59\r\n                        }\r\n                    )\r\n            }\r\n\r\n        }else{\r\n            this.setState(\r\n                {\r\n                    seconds: this.state.seconds-1\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <AlarmDisplay hours={this.state.hours} minutes={this.state.minutes} seconds={this.state.seconds}/>\r\n                <AlarmForm handleChange={this.handleChange} handleSubmit={this.handleSubmit} isButtonDisabled={this.state.isButtonDisabled}/>\r\n                <button onClick={this.rewindTime}>STOP</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Alarm","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Clock from './Clock'\nimport Button from './Button'\nimport {Element} from 'react-scroll'\nimport Table from './Table'\nimport Form from './Form'\nimport Alarm from './Alarm'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      characters: [        \n      ],\n    }\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) =>{\n    this.setState({characters:[...this.state.characters, character]})\n  }\n\n\n  render(){\n    return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          This will be the starting point.\n        </p>\n      </header>\n\n      <div className='clock-container'>\n        <Element id='clock' name='clock'>\n          <Clock />\n        </Element>\n        <Button isOn={false}/>\n      </div>\n\n      <div className='form-container'>\n        <Element id='form' name='form'>\n          <Table characterData={this.state.characters} removeCharacter={this.removeCharacter}/>\n          <Form handleSubmit={this.handleSubmit}/>\n        </Element>\n      </div>\n\n      <div className='alarm-container'>\n        <Element id='alarm' name='alarm'>\n          <Alarm />\n        </Element>\n      </div>\n\n    </div>\n    );\n}\n}\n\nexport default App;\n","import React, {Component} from 'react'\r\nimport Button from \"./Button\"\r\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from \"react-scroll\";\r\n\r\n  \r\n\r\nclass AppHeader extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {isHeaderVisible: true}\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.scrollToTop = this.scrollToTop.bind(this);\r\n    }\r\n\r\n    handleClick(){\r\n        this.setState(state => ({\r\n            isHeaderVisible: !state.isHeaderVisible \r\n        }))\r\n    }\r\n\r\n    scrollToTop(){\r\n        scroll.scrollToTop({\r\n            duration: 500,\r\n            smooth: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isHeaderVisible){\r\n        return(\r\n         <header>\r\n             <nav>\r\n             {this.state.isHeaderVisible &&\r\n                 <div className='header-container'>\r\n                     <ul className='link-container'>\r\n                     <li><a href=\"#\" onClick={this.scrollToTop}>Home </a></li>\r\n                     <li><Link \r\n                            to=\"clock\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            duration={500}\r\n                            className='scroll-link' \r\n                            >Date\r\n                     </Link></li>\r\n                     <li><Link \r\n                            to=\"form\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            duration={500}\r\n                            className='scroll-link' \r\n                            >Form\r\n                     </Link></li>\r\n                     <li><Link \r\n                            to=\"alarm\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            duration={500}\r\n                            className='scroll-link' \r\n                            >Alarm\r\n                     </Link></li>\r\n                     </ul>\r\n                     <div onClick={this.handleClick}>\r\n                        <Button isOn={false}/>\r\n                     </div>\r\n                 </div>\r\n             }\r\n            </nav>\r\n         </header>\r\n        )\r\n\r\n        }\r\n        return(\r\n            <div onClick={this.handleClick} className=\"invisible-header-container\">\r\n                <Button isOn={true}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppHeader from './AppHeader'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='page'>\n      <AppHeader />\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}